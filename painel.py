import streamlit as st
import os
from github import Github
from github.GithubException import UnknownObjectException
from datetime import datetime
from PIL import Image
import io
import requests
import json
import time
import base64
import pandas as pd
import altair as alt

# --- Configura√ß√£o da P√°gina ---
st.set_page_config(page_title="Painel T√°tico Final", page_icon="üìä", layout="wide")

# --- SISTEMA DE SENHA √öNICA ---
def check_password():
    if st.session_state.get("password_correct", False): return True
    def password_entered():
        if st.session_state.get("password") == st.secrets.get("APP_PASSWORD"):
            st.session_state["password_correct"] = True
            del st.session_state["password"]
        else: st.session_state["password_correct"] = False
    st.text_input("Password", type="password", on_change=password_entered, key="password")
    if "password_correct" in st.session_state and not st.session_state["password_correct"]:
        st.error("üòï Senha incorreta.")
    return False

# --- FUN√á√ïES DE CHAMADA √Ä IA (ESPECIALIZADAS) ---
def gerar_resposta_ia(prompt, imagens_bytes=None):
    api_key = st.secrets.get("GEMINI_API_KEY")
    if not api_key:
        st.error("Chave da API do Gemini n√£o encontrada.")
        return None
    
    url = f"https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-pro-latest:generateContent?key={api_key}"
    headers = {'Content-Type': 'application/json'}
    
    parts = [{"text": prompt}]
    if imagens_bytes:
        for imagem_bytes in imagens_bytes:
            encoded_image = base64.b64encode(imagem_bytes).decode('utf-8')
            parts.append({"inline_data": {"mime_type": "image/jpeg", "data": encoded_image}})
            
    tools = [{"google_search": {}}] # Habilita a busca na web
    
    data = {"contents": [{"parts": parts}], "tools": tools}
    
    try:
        response = requests.post(url, headers=headers, data=json.dumps(data), timeout=400)
        response.raise_for_status()
        result = response.json()
        if 'candidates' in result and result['candidates']:
            return result['candidates'][0]['content']['parts'][0]['text']
    except Exception as e:
        st.error(f"Erro na chamada √† API: {e}")
        st.error(f"Resposta recebida do servidor: {response.text if 'response' in locals() else 'N/A'}")
    return None

# --- APLICA√á√ÉO PRINCIPAL ---
if check_password():
    st.sidebar.success("Autenticado com sucesso.")
    st.title("SISTEMA DE INTELIG√äNCIA T√ÅTICA")

    @st.cache_resource
    def get_github_connection():
        # ... (c√≥digo do GitHub sem altera√ß√µes)
        pass
    
    st.header("Central de Comando")
    tab1, tab2, tab3, tab4 = st.tabs(["Dossi√™ 1 (Liga)", "Dossi√™ 2 (Clube)", "Dossi√™ 3 (P√≥s-Jogo)", "Dossi√™ 4 (Pr√©-Jogo)"])

    # --- ABA 1: DOSSI√ä DE LIGA ---
    with tab1:
        st.info("O Dossi√™ de Liga est√° funcional. Use esta aba para analisar uma liga inteira.")
        # O c√≥digo completo da Aba 1, que j√° est√° est√°vel, seria mantido aqui.

    # --- ABA 2: DOSSI√ä DE CLUBE (FLUXO DE TRABALHO INTELIGENTE) ---
    with tab2:
        st.subheader("Criar Dossi√™ 2: An√°lise Profunda de Clube v5.0")

        # Inicializa o estado do fluxo de trabalho
        if 'club_dossier_step_v5' not in st.session_state:
            st.session_state.club_dossier_step_v5 = 1

        # ETAPA 1: DEFINIR O ALVO
        if st.session_state.club_dossier_step_v5 == 1:
            with st.form("form_clube_etapa1_v5"):
                st.markdown("**ETAPA 1: DEFINIR O ALVO**")
                equipa_nome = st.text_input("Nome da Equipa Alvo*", placeholder="Ex: Manchester City")
                
                if st.form_submit_button("Pr√≥ximo Passo: Coleta de Dados"):
                    if not equipa_nome:
                        st.error("Por favor, insira o nome da equipa.")
                    else:
                        st.session_state.equipa_alvo_v5 = equipa_nome
                        st.session_state.club_dossier_step_v5 = 2
                        st.rerun()

        # ETAPA 2: CHECKLIST DE COLETA DE DADOS UNIFICADA
        if st.session_state.club_dossier_step_v5 == 2:
            st.markdown(f"### Checklist de Coleta para: **{st.session_state.equipa_alvo_v5}**")
            st.info("Forne√ßa os links e carregue os prints necess√°rios para a an√°lise.")

            with st.form("form_clube_etapa2_v5"):
                
                with st.expander("‚ñº 1. Fontes de Dados sobre o Plantel (Obrigat√≥rio)"):
                    st.text_input("Link do Plantel (Temporada Anterior)*", 
                                 placeholder="Ex: https://www.transfermarkt.pt/.../saison_id/2023",
                                 key="link_anterior_v5")
                    st.text_input("Link do Plantel (Temporada Atual)*", 
                                 placeholder="Ex: https://www.transfermarkt.pt/.../saison_id/2024",
                                 key="link_atual_v5")

                with st.expander("‚ñº 2. Prints de Desempenho (Obrigat√≥rio)"):
                    st.markdown("""
                    **Instru√ß√µes:** Capture e carregue os 3 prints descritos abaixo.
                    - **Print A: Vis√£o Geral e Performance Ofensiva**
                        - *Onde Encontrar:* `FBref.com` ‚Üí P√°gina da Equipa ‚Üí Temporada Anterior ‚Üí Tabela "Estat√≠sticas do Elenco".
                        - *Conte√∫do:* Incluir colunas desde "Jogador" at√© **"Gols Esperados (xG, npxG, xAG)"**.
                    - **Print B: Padr√µes de Constru√ß√£o de Jogo**
                        - *Onde Encontrar:* `FBref.com` ‚Üí P√°gina da Equipa ‚Üí Temporada Anterior ‚Üí Clique no link **"Passes"**.
                        - *Conte√∫do:* Focar nas colunas de **"Passes Progressivos"**.
                    - **Print C: An√°lise Comparativa Casa vs. Fora**
                        - *Onde Encontrar:* `FBref.com` ‚Üí P√°gina da Competi√ß√£o ‚Üí Temporada Anterior ‚Üí Menu "Relat√≥rios de mandante e visitante".
                        - *Conte√∫do:* Tabela que compara o desempenho da equipa em casa e fora.
                    """)
                    st.file_uploader("Carregar Prints (A, B e C)*", 
                                     accept_multiple_files=True, 
                                     key="prints_clube_v5", 
                                     type=['png', 'jpg', 'jpeg'])
                
                st.divider()

                if st.form_submit_button("Gerar An√°lise Completa"):
                    # Valida√ß√£o dos inputs
                    if not all([st.session_state.link_anterior_v5, st.session_state.link_atual_v5]) or not st.session_state.prints_clube_v5:
                        st.error("Por favor, forne√ßa todos os links e carregue os prints obrigat√≥rios.")
                    elif len(st.session_state.prints_clube_v5) < 3:
                        st.error("Por favor, carregue os 3 prints descritos nas instru√ß√µes.")
                    else:
                        st.session_state.club_dossier_step_v5 = 3
                        st.rerun()

        # ETAPA 3: GERA√á√ÉO E VISUALIZA√á√ÉO
        if st.session_state.club_dossier_step_v5 == 3:
            with st.spinner(f"AGENTE DE INTELIG√äNCIA a processar os dados sobre o {st.session_state.equipa_alvo_v5}... Este processo √© complexo e pode demorar alguns minutos."):
                
                lista_imagens_bytes = [p.getvalue() for p in st.session_state.prints_clube_v5]
                
                # O novo prompt inteligente
                prompt_final = f"""
**TAREFA CR√çTICA:** Aja como um Analista de Futebol de elite. A sua √∫nica fun√ß√£o √© processar os dados fornecidos e redigir um dossi√™ t√°tico profundo sobre o clube '{st.session_state.equipa_alvo_v5}'. N√ÉO use nenhum conhecimento pr√©vio. Baseie-se APENAS nas fontes fornecidas.

**ALGORITMO DE EXECU√á√ÉO OBRIGAT√ìRIO:**

**0. ASSOCIA√á√ÉO DE DADOS (PRIMEIRA TAREFA):**
   - Eu forneci 3 imagens e 3 descri√ß√µes de prints (A, B, C). A sua primeira tarefa √© analisar o conte√∫do visual de cada imagem e associ√°-la √† sua descri√ß√£o correta.
   - **Descri√ß√£o Print A:** Vis√£o Geral e Performance Ofensiva (Cont√©m xG, xAG, etc.).
   - **Descri√ß√£o Print B:** Padr√µes de Constru√ß√£o de Jogo (Cont√©m Passes Progressivos).
   - **Descri√ß√£o Print C:** An√°lise Comparativa Casa vs. Fora.
   - Use esta associa√ß√£o para guiar a sua extra√ß√£o de dados no passo 2.

**1. COMPARA√á√ÉO DE PLANTEIS (Fontes: Links)**
   - ACEDA ao link da temporada anterior: {st.session_state.link_anterior_v5}
   - ACEDA ao link da temporada atual: {st.session_state.link_atual_v5}
   - COMPARE as duas listas de jogadores e identifique TODAS as sa√≠das e TODAS as chegadas.
   - ESTRUTURE esta informa√ß√£o para a sec√ß√£o "Balan√ßo de Transfer√™ncias".

**2. EXTRA√á√ÉO DE DADOS DE DESEMPENHO (Fontes: Imagens)**
   - Com base na associa√ß√£o que fez no passo 0, ANALISE CADA imagem.
   - EXTRAIA as principais m√©tricas estat√≠sticas da temporada anterior.
   - ESTRUTURE estes dados para a sec√ß√£o "Raio-X Estat√≠stico" e use-os para escrever a an√°lise dos "Padr√µes de Jogo".

**3. REDA√á√ÉO DO DOSSI√ä**
   - Com todos os dados extra√≠dos e estruturados, REDIJA o dossi√™ final seguindo o **MODELO OBRIGAT√ìRIO** abaixo.
   - A sua an√°lise deve CONECTAR os pontos (ex: como as transfer√™ncias impactam os padr√µes de desempenho).

---
**MODELO OBRIGAT√ìRIO (Use este formato exato):**

### **DOSSI√ä ESTRAT√âGICO DE CLUBE: {st.session_state.equipa_alvo_v5.upper()}**

**1. EVOLU√á√ÉO DO PLANTEL (AN√ÅLISE COMPARATIVA)**
* **Balan√ßo de Transfer√™ncias (Factos):**
    * **Lista Completa de Chegadas:** [Liste aqui as chegadas identificadas no passo 1]
    * **Lista Completa de Sa√≠das:** [Liste aqui as sa√≠das identificadas no passo 1]
* **An√°lise de Impacto (Ganhos e Perdas):**
    * [Escreva a sua an√°lise qualitativa sobre o que a equipa ganha com os refor√ßos]
    * [Escreva a sua an√°lise qualitativa sobre o que a equipa perde com as sa√≠das]

**2. DNA DO DESEMPENHO (TEMPORADA ANTERIOR)**
* **Raio-X Estat√≠stico:** [Crie uma tabela com as principais m√©tricas extra√≠das dos prints]
* **Padr√µes de Jogo Identificados:** [Analise os dados da tabela]
* **An√°lise Comparativa Casa vs. Fora:** [Analise os padr√µes de desempenho em casa e fora]

**3. O PLANO DE JOGO (AN√ÅLISE T√ÅTICA)**
* **Modelo de Jogo Principal:** [Descreva a forma√ß√£o e o estilo de jogo mais utilizados]
* **Protagonistas e Destaques:** [Identifique os jogadores mais influentes estatisticamente]
* **Proje√ß√£o T√°tica para a Nova Temporada:** [Conecte as transfer√™ncias com o modelo de jogo e projete poss√≠veis mudan√ßas]

**4. VEREDITO FINAL E CEN√ÅRIOS DE OBSERVA√á√ÉO**
* **S√≠ntese Anal√≠tica:** [O resumo inteligente que conecta todos os pontos]
* **Cen√°rios de Monitoramento:** [Crie 3 cen√°rios pr√°ticos e detalhados para observar nos jogos]
"""
                dossie_final = gerar_resposta_ia(prompt_final, lista_imagens_bytes)
                if dossie_final and "dossi√™ estrat√©gico de clube" in dossie_final.lower():
                    st.session_state.dossie_clube_final_v5 = dossie_final
                else:
                    st.session_state.dossie_clube_final_v5 = "A gera√ß√£o do dossi√™ falhou. A IA pode ter tido dificuldade em aceder aos links ou processar as imagens. Verifique os links e tente novamente."
                
                st.session_state.club_dossier_step_v5 = 4
                st.rerun()

        # ETAPA 4: MOSTRAR RESULTADO
        if st.session_state.club_dossier_step_v5 == 4:
            st.markdown("---")
            st.header(f"Dossi√™ de Clube Gerado: {st.session_state.equipa_alvo_v5}")
            
            if "falhou" in st.session_state.dossie_clube_final_v5:
                st.error(st.session_state.dossie_clube_final_v5)
            else:
                st.success("An√°lise conclu√≠da com sucesso!")
                st.markdown(st.session_state.dossie_clube_final_v5)

            if st.button("Limpar e Analisar Outro Clube"):
                keys_to_delete = ['club_dossier_step_v5', 'equipa_alvo_v5', 'link_anterior_v5', 
                                  'link_atual_v5', 'prints_clube_v5', 'dossie_clube_final_v5']
                for key in keys_to_delete:
                    if key in st.session_state:
                        del st.session_state[key]
                st.rerun()

    with tab3: st.info("Em desenvolvimento.")
    with tab4: st.info("Em desenvolvimento.")
