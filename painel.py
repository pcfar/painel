import streamlit as st
import os
from github import Github
from github.GithubException import UnknownObjectException, GithubException

# --- Configura√ß√£o da P√°gina ---
st.set_page_config(page_title="Painel T√°tico v6.3", page_icon="üß†", layout="wide")

# --- SISTEMA DE SENHA √öNICA ---
def check_password():
    if st.session_state.get("password_correct", False):
        return True
    def password_entered():
        if st.session_state.get("password") == st.secrets.get("APP_PASSWORD"):
            st.session_state["password_correct"] = True
            del st.session_state["password"]
        else:
            st.session_state["password_correct"] = False
    st.text_input("Password", type="password", on_change=password_entered, key="password")
    if "password_correct" in st.session_state and not st.session_state["password_correct"]:
        st.error("üòï Senha incorreta.")
    return False

# --- APLICA√á√ÉO PRINCIPAL ---
if check_password():
    st.sidebar.success("Autenticado com sucesso.")
    st.title("SISTEMA DE INTELIG√äNCIA T√ÅTICA")

    # --- Conex√£o com o GitHub ---
    @st.cache_resource
    def get_github_connection():
        try:
            g = Github(st.secrets["GITHUB_TOKEN"])
            repo = g.get_repo("pcfar/painel")
            return repo
        except Exception:
            st.error("Erro ao conectar com o GitHub.")
            st.stop()
    repo = get_github_connection()

    # --- CENTRAL DE COMANDO COM ABAS ---
    st.header("Central de Comando")
    
    tab1, tab2, tab3, tab4 = st.tabs(["Dossi√™ 1 (Liga)", "Dossi√™ 2 (Clube)", "Dossi√™ 3 (P√≥s-Jogo)", "Dossi√™ 4 (Pr√©-Jogo)"])

    with tab1:
        # L√≥gica do Dossi√™ 1
        st.info("Formul√°rio do Dossi√™ 1.")

    with tab2:
        # L√≥gica do Dossi√™ 2
        st.info("Formul√°rio do Dossi√™ 2.")
        
    with tab3:
        st.subheader("Criar Dossi√™ 3: Relat√≥rio P√≥s-Jogo")
        with st.form("form_dossie_3"):
            st.write("Forne√ßa os 'prints' da √∫ltima partida da equipe-alvo para gerar a an√°lise.")

            temporada = st.text_input("Temporada*", placeholder="Ex: 2024-2025")
            liga = st.text_input("Liga (c√≥digo)*", placeholder="Ex: HOL")
            clube = st.text_input("Clube (c√≥digo)*", placeholder="Ex: FEY")
            rodada = st.text_input("Rodada*", placeholder="Ex: R05")

            st.markdown("---")

            print_stats_ht = st.file_uploader("1) Print das Estat√≠sticas do 1¬∫ Tempo (Sofascore)*", help="Capture a tela de 'Estat√≠sticas' da partida com o filtro '1¬∫ Tempo' selecionado.", type=['png', 'jpg'])
            print_stats_st = st.file_uploader("2) Print das Estat√≠sticas do 2¬∫ Tempo (Sofascore)*", help="Capture a mesma tela de 'Estat√≠sticas', mas com o filtro '2¬∫ Tempo'.", type=['png', 'jpg'])
            print_timeline = st.file_uploader("3) Print da Linha do Tempo e Substitui√ß√µes (Sofascore)*", help="Capture a tela principal do jogo que mostra a sequ√™ncia de gols, eventos e substitui√ß√µes.", type=['png', 'jpg'])

            if st.form_submit_button("Processar e Gerar Dossi√™ 3"):
                if not all([temporada, liga, clube, rodada, print_stats_ht, print_stats_st, print_timeline]):
                    st.error("Por favor, preencha todos os campos obrigat√≥rios (*).")
                else:
                    with st.spinner("Processando Dossi√™ 3..."):
                        # (A l√≥gica completa de upload inteligente e an√°lise OCR viria aqui)
                        st.success("Simula√ß√£o: Dossi√™ 3 (P√≥s-Jogo) gerado com sucesso!")
                        st.balloons()
    with tab4:
        st.info("Formul√°rio para o Dossi√™ 4 (Pr√©-Jogo) em desenvolvimento.")
